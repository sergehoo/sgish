# Generated by Django 4.2.14 on 2025-01-05 23:19

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import pharmacy.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleCommande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite_commandee', models.PositiveIntegerField()),
                ('date_commande', models.DateField(auto_now_add=True)),
                ('statut', models.CharField(choices=[('Commandé', 'Commandé'), ('Reçu', 'Reçu'), ('En attente', 'En attente')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CathegorieMolecule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fournisseur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, unique=True)),
                ('adresse', models.TextField()),
                ('contact', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Medicament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codebarre', models.CharField(default=pharmacy.models.generate_unique_code_barre, help_text='Code unique pour le médicament', max_length=150, unique=True, validators=[django.core.validators.RegexValidator(message='Le code-barre doit être composé de 12 chiffres.', regex='^\\d{12}$')])),
                ('nom', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('dosage', models.IntegerField(blank=True, null=True)),
                ('unitdosage', models.CharField(blank=True, choices=[('mg', 'Milligramme (mg)'), ('g', 'Gramme (g)'), ('ml', 'Millilitre (ml)'), ('L', 'Litre (L)'), ('mcg', 'Microgramme (mcg)'), ('UI', 'Unité Internationale (UI)'), ('meq', 'Milliequivalent (mEq)'), ('µL', 'Microlitre (µL)'), ('µg', 'Microgramme (µg)'), ('cm³', 'Centimètre Cube (cm³)'), ('mL/kg', 'Millilitre par kilogramme (mL/kg)'), ('mg/m²', 'Milligramme par mètre carré (mg/m²)'), ('mg/kg', 'Milligramme par kilogramme (mg/kg)'), ('g/L', 'Gramme par litre (g/L)')], help_text='Ex: 500mg, 20mg/ml', max_length=50, null=True)),
                ('dosage_form', models.CharField(blank=True, choices=[('Comprimé', 'Comprimé'), ('Sirop', 'Sirop'), ('Injection', 'Injection'), ('Gélule', 'Gélule'), ('Crème', 'Crème'), ('Pommade', 'Pommade'), ('Suppositoire', 'Suppositoire'), ('Gouttes', 'Gouttes'), ('Patch', 'Patch'), ('Inhalateur', 'Inhalateur'), ('Solution', 'Solution'), ('Suspension', 'Suspension'), ('Poudre', 'Poudre'), ('Spray', 'Spray'), ('Ovule', 'Ovule'), ('Collyre', 'Collyre'), ('Aérosol', 'Aérosol'), ('Élixir', 'Élixir'), ('Baume', 'Baume'), ('Granulé', 'Granulé'), ('Capsule', 'Capsule')], max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('stock', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('date_expiration', models.DateField(blank=True, null=True)),
                ('miniature', models.ImageField(blank=True, null=True, upload_to='pharmacy/miniature')),
                ('categorie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pharmacy.cathegoriemolecule')),
                ('fournisseur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pharmacy.fournisseur')),
            ],
        ),
        migrations.CreateModel(
            name='Pharmacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, unique=True)),
                ('type', models.CharField(choices=[('Comprimé', 'Comprimé'), ('Sirop', 'Sirop'), ('Injection', 'Injection'), ('Gélule', 'Gélule'), ('Crème', 'Crème'), ('Pommade', 'Pommade'), ('Suppositoire', 'Suppositoire'), ('Gouttes', 'Gouttes'), ('Patch', 'Patch'), ('Inhalateur', 'Inhalateur'), ('Solution', 'Solution'), ('Suspension', 'Suspension'), ('Poudre', 'Poudre'), ('Spray', 'Spray'), ('Ovule', 'Ovule'), ('Collyre', 'Collyre'), ('Aérosol', 'Aérosol'), ('Élixir', 'Élixir'), ('Baume', 'Baume'), ('Granulé', 'Granulé'), ('Capsule', 'Capsule')], max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('lieu', models.CharField(max_length=255)),
                ('responsable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.employee')),
            ],
        ),
        migrations.CreateModel(
            name='StockAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('niveau_critique', models.PositiveIntegerField()),
                ('quantite_actuelle', models.PositiveIntegerField()),
                ('alerte', models.BooleanField(default=False)),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pharmacy.medicament')),
            ],
        ),
        migrations.CreateModel(
            name='RendezVous',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('reason', models.CharField(default='Récupération des médicaments', max_length=255)),
                ('status', models.CharField(choices=[('Scheduled', 'Scheduled'), ('Completed', 'Completed'), ('Missed', 'Missed')], default='Scheduled', max_length=50)),
                ('recurrence', models.CharField(choices=[('None', 'None'), ('Weekly', 'Chaque semaine'), ('Biweekly', 'Chaque deux semaines'), ('Monthly', 'Chaque mois'), ('Bimonthly', 'Chaque deux mois'), ('trimonthly', 'Chaque trois mois'), ('semestrial', 'Chaque Semestre')], default='None', max_length=20)),
                ('recurrence_end_date', models.DateField(blank=True, help_text='Date de fin de la récurrence', null=True)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_by', to='core.employee')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.employee')),
                ('medicaments', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pharmacy.medicament')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient')),
                ('pharmacie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pharmacy.pharmacy')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.service')),
            ],
        ),
        migrations.CreateModel(
            name='MouvementStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField()),
                ('type_mouvement', models.CharField(choices=[('Entrée', 'Entrée'), ('Sortie', 'Sortie')], max_length=50)),
                ('date_mouvement', models.DateTimeField(auto_now_add=True)),
                ('medicament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pharmacy.medicament')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Molecule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('cathegorie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pharmacy.cathegoriemolecule')),
            ],
        ),
        migrations.AddField(
            model_name='medicament',
            name='molecules',
            field=models.ManyToManyField(to='pharmacy.molecule'),
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.PositiveIntegerField()),
                ('date_commande', models.DateField()),
                ('statut', models.CharField(choices=[('Commandé', 'Commandé'), ('Reçu', 'Reçu'), ('En attente', 'En attente')], max_length=50)),
                ('articles', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='pharmacy.articlecommande')),
            ],
        ),
        migrations.AddField(
            model_name='articlecommande',
            name='fournisseur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pharmacy.fournisseur'),
        ),
        migrations.AddField(
            model_name='articlecommande',
            name='medicament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pharmacy.medicament'),
        ),
    ]
