# Generated by Django 4.2.14 on 2024-10-22 11:37

import core.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qlook_id', models.CharField(default=core.models.qlook, editable=False, max_length=100, unique=True)),
                ('gender', models.CharField(blank=True, choices=[('Homme', 'Homme'), ('Femme', 'Femme')], max_length=100, null=True)),
                ('situation_matrimoniale', models.CharField(blank=True, choices=[('Celibataire', 'Celibataire'), ('Concubinage', 'Concubinage'), ('Marie', 'Marié'), ('Divorce', 'Divorcé'), ('Veuf', 'Veuf'), ('Autre', 'Autre')], max_length=100, null=True)),
                ('nbr_enfants', models.IntegerField(blank=True, default='20', null=True)),
                ('persone_ref_noms', models.CharField(blank=True, default='Jean Kouame', max_length=100, null=True)),
                ('persone_ref_contact', models.CharField(blank=True, default='05 00 05 00 05', max_length=100, null=True)),
                ('num_cnps', models.CharField(blank=True, default='CNPS00000000', max_length=100, null=True)),
                ('phone', models.CharField(blank=True, default='+22507070707', max_length=20, null=True)),
                ('bank_name', models.CharField(blank=True, default='Banque name', max_length=20, null=True)),
                ('account_number', models.IntegerField(blank=True, default='000000000000', null=True)),
                ('code_guichet', models.CharField(blank=True, default='00000000', max_length=20, null=True)),
                ('cle_rib', models.CharField(blank=True, default='00000000', max_length=20, null=True)),
                ('code_banque', models.CharField(blank=True, default='00000000', max_length=20, null=True)),
                ('iban', models.CharField(blank=True, default='00000000', max_length=20, null=True)),
                ('swift', models.CharField(blank=True, default='00000000', max_length=20, null=True)),
                ('bank_adress', models.CharField(blank=True, default='Plateau', max_length=20, null=True)),
                ('alternative_phone', models.CharField(blank=True, default='00000000', max_length=20, null=True)),
                ('nationalite', models.CharField(blank=True, default='00000000', max_length=70, null=True)),
                ('personal_mail', models.CharField(blank=True, default='email@sah.com', max_length=70, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('date_embauche', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('salary', models.CharField(blank=True, max_length=100, null=True)),
                ('job_title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Titre du poste')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Numéro de téléphone')),
                ('photo', models.ImageField(blank=True, default='urap/users/5.png', null=True, upload_to='urap/users')),
                ('sortie', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('is_deleted', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('slug', models.SlugField(blank=True, editable=False, help_text='slug field', null=True, unique=True, verbose_name='slug ')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'permissions': (('can_edit_employee', 'Can edit employee'), ('can_create_employee', 'Can create employee'), ('can_view_salary', 'can view salary')),
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contry', django_countries.fields.CountryField(max_length=2)),
                ('ville', models.CharField(blank=True, max_length=225, null=True)),
                ('commune', models.CharField(blank=True, max_length=225, null=True)),
                ('quartier', models.CharField(blank=True, max_length=225, null=True)),
                ('geojson', models.JSONField(blank=True, null=True)),
                ('current_location', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_patient', models.CharField(default=core.models.get_random_code, max_length=100, unique=True)),
                ('code_vih', models.CharField(default=core.models.get_incremental_code, max_length=100, unique=True)),
                ('nom', models.CharField(max_length=225)),
                ('prenoms', models.CharField(max_length=225)),
                ('contact', models.CharField(max_length=225)),
                ('situation_matrimoniale', models.CharField(choices=[('Celibataire', 'Celibataire'), ('Concubinage', 'Concubinage'), ('Marie', 'Marié'), ('Divorce', 'Divorcé'), ('Veuf', 'Veuf'), ('Autre', 'Autre')], max_length=225)),
                ('lieu_naissance', models.CharField(max_length=200)),
                ('date_naissance', models.DateField()),
                ('genre', models.CharField(choices=[('Homme', 'Homme'), ('Femme', 'Femme')], max_length=10)),
                ('nationalite', models.CharField(max_length=200)),
                ('profession', models.CharField(blank=True, max_length=100, null=True)),
                ('nbr_enfants', models.PositiveIntegerField(default=0)),
                ('groupe_sanguin', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=20, null=True)),
                ('niveau_etude', models.CharField(blank=True, max_length=100, null=True)),
                ('employeur', models.CharField(blank=True, max_length=100, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='')),
                ('status', models.CharField(blank=True, choices=[('Admis', 'Admis'), ('Sorti', 'Sorti'), ('Gueris-EXEA', 'Gueris-EXEA'), ('Transféré-TRANSF', 'Transféré-TRANSF'), ('SCAM', 'SCAM'), ('EVADE', 'EVADE'), ('DCD', 'DCD'), ('Sous observation', 'Sous observation'), ('Sous traitement', 'Sous traitement'), ('Chirurgie programmée', 'Chirurgie programmée'), ('En chirurgie', 'En chirurgie'), ('Récupération post-opératoire', 'Récupération post-opératoire'), ('USI', 'Unité de soins intensifs (USI)'), ('Urgence', 'Urgence'), ('Consultation externe', 'Consultation externe'), ('Réhabilitation', 'Réhabilitation'), ('En attente de diagnostic', 'En attente de diagnostic'), ('Traitement en cours', 'Traitement en cours'), ('Suivi programmé', 'Suivi programmé'), ('Consultation', 'Consultation'), ('Sortie en attente', 'Sortie en attente'), ('Isolement', 'Isolement'), ('Ambulantoire', 'Ambulantoire'), ('Aucun', 'Aucun')], default='Aucun', max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('details', models.JSONField(blank=True, null=True)),
                ('cascontact', models.ManyToManyField(to='core.patient')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.employee')),
                ('localite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.location')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=225, null=True)),
                ('icon', models.CharField(blank=True, default='fa-solid fa-virus', max_length=225, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceSubActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=225, null=True)),
                ('icon', models.CharField(blank=True, max_length=225, null=True)),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subactivities', to='core.service')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalEmployee',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('qlook_id', models.CharField(db_index=True, default=core.models.qlook, editable=False, max_length=100)),
                ('gender', models.CharField(blank=True, choices=[('Homme', 'Homme'), ('Femme', 'Femme')], max_length=100, null=True)),
                ('situation_matrimoniale', models.CharField(blank=True, choices=[('Celibataire', 'Celibataire'), ('Concubinage', 'Concubinage'), ('Marie', 'Marié'), ('Divorce', 'Divorcé'), ('Veuf', 'Veuf'), ('Autre', 'Autre')], max_length=100, null=True)),
                ('nbr_enfants', models.IntegerField(blank=True, default='20', null=True)),
                ('persone_ref_noms', models.CharField(blank=True, default='Jean Kouame', max_length=100, null=True)),
                ('persone_ref_contact', models.CharField(blank=True, default='05 00 05 00 05', max_length=100, null=True)),
                ('num_cnps', models.CharField(blank=True, default='CNPS00000000', max_length=100, null=True)),
                ('phone', models.CharField(blank=True, default='+22507070707', max_length=20, null=True)),
                ('bank_name', models.CharField(blank=True, default='Banque name', max_length=20, null=True)),
                ('account_number', models.IntegerField(blank=True, default='000000000000', null=True)),
                ('code_guichet', models.CharField(blank=True, default='00000000', max_length=20, null=True)),
                ('cle_rib', models.CharField(blank=True, default='00000000', max_length=20, null=True)),
                ('code_banque', models.CharField(blank=True, default='00000000', max_length=20, null=True)),
                ('iban', models.CharField(blank=True, default='00000000', max_length=20, null=True)),
                ('swift', models.CharField(blank=True, default='00000000', max_length=20, null=True)),
                ('bank_adress', models.CharField(blank=True, default='Plateau', max_length=20, null=True)),
                ('alternative_phone', models.CharField(blank=True, default='00000000', max_length=20, null=True)),
                ('nationalite', models.CharField(blank=True, default='00000000', max_length=70, null=True)),
                ('personal_mail', models.CharField(blank=True, default='email@sah.com', max_length=70, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('date_embauche', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('salary', models.CharField(blank=True, max_length=100, null=True)),
                ('job_title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Titre du poste')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Numéro de téléphone')),
                ('photo', models.TextField(blank=True, default='urap/users/5.png', max_length=100, null=True)),
                ('sortie', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('is_deleted', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('slug', models.SlugField(blank=True, editable=False, help_text='slug field', null=True, verbose_name='slug ')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('dpt', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.service', verbose_name='service')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical employee',
                'verbose_name_plural': 'historical employees',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='employee',
            name='dpt',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.service', verbose_name='service'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PatientUserObjectPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.permission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('user', 'permission', 'content_object')},
            },
        ),
        migrations.CreateModel(
            name='PatientGroupObjectPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.permission')),
            ],
            options={
                'abstract': False,
                'unique_together': {('group', 'permission', 'content_object')},
            },
        ),
    ]
