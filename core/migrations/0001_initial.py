# Generated by Django 4.2.14 on 2025-01-20 09:02

import core.models
from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CasContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_person', models.CharField(max_length=255, verbose_name='Contact Person Name')),
                ('phone_number', models.CharField(help_text='Enter a valid phone number with country code, e.g., +1234567890', max_length=15, verbose_name='Phone Number')),
                ('relationship', models.CharField(choices=[('FAMILY', 'Family Member'), ('FRIEND', 'Friend'), ('COWORKER', 'Coworker'), ('NEIGHBOR', 'Neighbor'), ('OTHER', 'Other')], max_length=255, verbose_name='Relationship to Patient')),
                ('contact_frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('OCCASIONAL', 'Occasional')], max_length=255, verbose_name='Frequency of Contact')),
                ('date_contact', models.DateField(blank=True, null=True, verbose_name='Date of Last Contact')),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='Location of Interaction')),
                ('prevention_measures', models.TextField(blank=True, null=True, verbose_name='Prevention Measures Taken')),
                ('details', models.TextField(blank=True, null=True, verbose_name='Details')),
                ('smsdepistage', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Case Contact',
                'verbose_name_plural': 'Case Contacts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DistrictSanitaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=100, null=True)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('geojson', models.JSONField(blank=True, null=True)),
                ('previous_rank', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qlook_id', models.CharField(default=core.models.qlook, editable=False, max_length=100, unique=True)),
                ('gender', models.CharField(blank=True, choices=[('Homme', 'Homme'), ('Femme', 'Femme')], max_length=100, null=True)),
                ('situation_matrimoniale', models.CharField(blank=True, choices=[('Celibataire', 'Celibataire'), ('Concubinage', 'Concubinage'), ('Marie', 'Marié'), ('Divorce', 'Divorcé'), ('Veuf', 'Veuf'), ('Autre', 'Autre')], max_length=100, null=True)),
                ('phone', models.CharField(blank=True, default='+22507070707', max_length=20, null=True)),
                ('nationalite', models.CharField(blank=True, default='00000000', max_length=70, null=True)),
                ('email', models.CharField(blank=True, default='email@sah.com', max_length=70, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, default='urap/users/5.png', null=True, upload_to='urap/users')),
                ('sortie', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('is_deleted', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('slug', models.SlugField(blank=True, editable=False, help_text='slug field', null=True, unique=True, verbose_name='slug ')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'permissions': (('can_edit_employee', 'Can edit employee'), ('can_create_employee', 'Can create employee'), ('can_view_salary', 'can view salary'), ('can_view_employee', 'can view employee')),
            },
        ),
        migrations.CreateModel(
            name='HealthRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('type', models.CharField(blank=True, choices=[('Commune', 'Commune'), ('Village', 'Village'), ('Ville', 'Ville'), ('Quartier', 'Quartier')], max_length=100, null=True)),
                ('population', models.CharField(blank=True, max_length=100, null=True)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.districtsanitaire')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_patient', models.CharField(max_length=100, unique=True)),
                ('code_vih', models.CharField(blank=True, max_length=100, unique=True)),
                ('nom', models.CharField(max_length=225)),
                ('prenoms', models.CharField(max_length=225)),
                ('contact', models.CharField(max_length=225)),
                ('adresse_mail', models.CharField(blank=True, max_length=50, unique=True)),
                ('situation_matrimoniale', models.CharField(choices=[('Celibataire', 'Celibataire'), ('Concubinage', 'Concubinage'), ('Marie', 'Marié'), ('Divorce', 'Divorcé'), ('Veuf', 'Veuf'), ('Autre', 'Autre')], max_length=225)),
                ('lieu_naissance', models.CharField(max_length=200)),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('genre', models.CharField(choices=[('Homme', 'Homme'), ('Femme', 'Femme')], max_length=10)),
                ('nationalite', models.CharField(max_length=200)),
                ('ethnie', models.CharField(blank=True, max_length=100, null=True)),
                ('profession', models.CharField(blank=True, max_length=100, null=True)),
                ('nbr_enfants', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('groupe_sanguin', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('Inconnu', 'Inconnu')], max_length=20, null=True)),
                ('niveau_etude', models.CharField(blank=True, max_length=100, null=True)),
                ('employeur', models.CharField(blank=True, max_length=100, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('status', models.CharField(blank=True, choices=[('Admis', 'Admis'), ('Sorti', 'Sorti'), ('Gueris-EXEA', 'Gueris-EXEA'), ('Transféré-TRANSF', 'Transféré-TRANSF'), ('SCAM', 'SCAM'), ('EVADE', 'EVADE'), ('DCD', 'DCD'), ('Sous observation', 'Sous observation'), ('Sous traitement', 'Sous traitement'), ('Chirurgie programmée', 'Chirurgie programmée'), ('En chirurgie', 'En chirurgie'), ('Récupération post-opératoire', 'Récupération post-opératoire'), ('USI', 'Unité de soins intensifs (USI)'), ('Urgence', 'Urgence'), ('Consultation externe', 'Consultation externe'), ('Réhabilitation', 'Réhabilitation'), ('En attente de diagnostic', 'En attente de diagnostic'), ('Traitement en cours', 'Traitement en cours'), ('Suivi programmé', 'Suivi programmé'), ('Consultation', 'Consultation'), ('Sortie en attente', 'Sortie en attente'), ('Isolement', 'Isolement'), ('Ambulantoire', 'Ambulantoire'), ('Aucun', 'Aucun')], default='Aucun', max_length=100, null=True)),
                ('urgence', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('details', models.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.employee')),
                ('localite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.location')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'permissions': (('view_patient_name', 'Can view patient name'), ('view_dossier_patient', 'Can View dossier patient')),
            },
        ),
        migrations.CreateModel(
            name='PolesRegionaux',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=225, null=True)),
                ('icon', models.CharField(blank=True, default='fa-solid fa-virus', max_length=225, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceSubActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=225, null=True)),
                ('icon', models.CharField(blank=True, max_length=225, null=True)),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subactivities', to='core.service')),
            ],
        ),
        migrations.CreateModel(
            name='PatientUserObjectPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.permission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatientGroupObjectPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.patient')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.permission')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatientAdresses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current', models.BooleanField(default=False)),
                ('staydate', models.DateField(blank=True, null=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.location')),
            ],
        ),
        migrations.CreateModel(
            name='Maladie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('categorie', models.CharField(choices=[('infectieuse', 'Maladies infectieuses'), ('cardiovasculaire', 'Maladies cardiovasculaires'), ('respiratoire', 'Maladies respiratoires'), ('metabolique', 'Maladies métaboliques'), ('neurologique', 'Maladies neurologiques'), ('autoimmune', 'Maladies auto-immunes'), ('cancer', 'Cancers'), ('genetique', 'Maladies génétiques'), ('psychiatrique', 'Maladies psychiatriques'), ('musculosquelettique', 'Maladies musculosquelettiques'), ('dermatologique', 'Maladies dermatologiques'), ('gastrointestinale', 'Maladies gastro-intestinales'), ('urologique', 'Maladies urologiques et rénales'), ('rare', 'Maladies rares'), ('mode_de_vie', 'Maladies liées au mode de vie'), ('autre', 'Autres')], default='autre', max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('gravite', models.CharField(choices=[('leger', 'Léger'), ('modere', 'Modéré'), ('grave', 'Grave')], default='leger', max_length=20)),
                ('date_diagnostic', models.DateField(blank=True, null=True)),
                ('traitements', models.TextField(blank=True, null=True)),
                ('observations', models.TextField(blank=True, null=True)),
                ('date_enregistrement', models.DateTimeField(auto_now_add=True)),
                ('date_mise_a_jour', models.DateTimeField(auto_now=True)),
                ('medecin_responsable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maladies_traitees', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maladies', to='core.patient')),
            ],
            options={
                'verbose_name': 'Maladie',
                'verbose_name_plural': 'Maladies',
                'ordering': ['categorie', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalEmployee',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('qlook_id', models.CharField(db_index=True, default=core.models.qlook, editable=False, max_length=100)),
                ('gender', models.CharField(blank=True, choices=[('Homme', 'Homme'), ('Femme', 'Femme')], max_length=100, null=True)),
                ('situation_matrimoniale', models.CharField(blank=True, choices=[('Celibataire', 'Celibataire'), ('Concubinage', 'Concubinage'), ('Marie', 'Marié'), ('Divorce', 'Divorcé'), ('Veuf', 'Veuf'), ('Autre', 'Autre')], max_length=100, null=True)),
                ('phone', models.CharField(blank=True, default='+22507070707', max_length=20, null=True)),
                ('nationalite', models.CharField(blank=True, default='00000000', max_length=70, null=True)),
                ('email', models.CharField(blank=True, default='email@sah.com', max_length=70, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('photo', models.TextField(blank=True, default='urap/users/5.png', max_length=100, null=True)),
                ('sortie', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('is_deleted', models.SmallIntegerField(blank=True, default=0, null=True)),
                ('slug', models.SlugField(blank=True, editable=False, help_text='slug field', null=True, verbose_name='slug ')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('departement', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.service', verbose_name='service')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical employee',
                'verbose_name_plural': 'historical employees',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
